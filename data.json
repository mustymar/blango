[{"model": "blog.comment", "pk": 1, "fields": {"creator": 1, "content": "Hello", "content_type": 8, "object_id": 1, "created_at": "2022-11-09T12:23:49.524Z", "modified_at": "2022-11-09T12:23:49.524Z"}}, {"model": "blog.comment", "pk": 2, "fields": {"creator": 1, "content": "Yes it's working", "content_type": 8, "object_id": 1, "created_at": "2022-11-09T12:24:04.909Z", "modified_at": "2022-11-09T12:24:04.909Z"}}, {"model": "blog.comment", "pk": 3, "fields": {"creator": 1, "content": "Yeahhhhhhhhhhhhhhh", "content_type": 8, "object_id": 1, "created_at": "2022-11-09T14:16:23.187Z", "modified_at": "2022-11-09T14:16:23.187Z"}}, {"model": "blog.comment", "pk": 4, "fields": {"creator": 1, "content": "Hellp", "content_type": 8, "object_id": 1, "created_at": "2022-11-15T13:34:40.225Z", "modified_at": "2022-11-15T13:34:40.225Z"}}, {"model": "blog.comment", "pk": 5, "fields": {"creator": 1, "content": "Exactly\\", "content_type": 8, "object_id": 2, "created_at": "2022-11-15T13:36:58.891Z", "modified_at": "2022-11-15T13:36:58.891Z"}}, {"model": "blog.tag", "pk": 1, "fields": {"value": "django"}}, {"model": "blog.tag", "pk": 2, "fields": {"value": "codio"}}, {"model": "blog.post", "pk": 1, "fields": {"author": 1, "created_at": "2022-11-07T10:24:54.367Z", "modified_at": "2022-11-07T10:24:54.367Z", "published_at": "2022-11-08T19:11:40Z", "title": "An example of blog post by codio", "slug": "an-example-of-blog-post-by-codio", "summary": "Just the summary", "content": "<h1>I give thanks to Allah the Lord of the universe.</h1>", "tags": [1, 2]}}, {"model": "blog.post", "pk": 2, "fields": {"author": 1, "created_at": "2022-11-08T19:11:11.692Z", "modified_at": "2022-11-08T19:11:11.692Z", "published_at": "2022-11-08T19:11:54Z", "title": "Custom Filters", "slug": "custom-filters", "summary": "Note that the convention is to name template tag files in the format [something]_extras.py, but this is not mandatory. You just need to be sure that your file won’t conflict with any of the built in template libraries or third parties that you might have included. Template tag files aren’t namespaced so blog_extras could be used by any app in our project.", "content": "In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:In Django templates, you can pass data through filters before it’s rendered. This is done with the | (pipe) operator inside a rendering block. For example, to render a value in lowercase, using the lower filter, you’d do this:", "tags": [2]}}, {"model": "blango_auth.user", "pk": 1, "fields": {"password": "argon2$argon2id$v=19$m=102400,t=2,p=8$TWt6djB0NTZNWTdmYTh0d21iTWR1ZA$tXovoe+n5aTERqXU2aL6jQ", "last_login": "2022-11-18T10:33:14.820Z", "is_superuser": true, "username": "mustymar", "first_name": "Marizuk", "last_name": "Mustapha", "email": "mustaphamarizuk98@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2022-11-07T09:04:16Z", "groups": [], "user_permissions": [1, 2, 3, 4, 9, 10, 11, 12, 5, 6, 7, 8, 13, 14, 15, 16, 33, 34, 35, 36, 29, 30, 31, 32, 25, 26, 27, 28, 17, 18, 19, 20, 21, 22, 23, 24]}}]